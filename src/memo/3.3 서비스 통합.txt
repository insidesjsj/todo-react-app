3.3 서비스 통합
학습 내용
: 크로스-오리진 리소스 셰어링('C'ross-'O'rigin 'R'esource 'S'haring)

실습 내용
- 스프링 @Configurtion을 이용한 CORS 문제 해결
- fetch를 이용한 프론트엔드와 백엔드 통합

3.3.1 componentDidMount
: 렌더링이 맨 처음 일어나는 순간, 즉 ReactDOM 트리가 존재하지 않는 상태에서 리액트가 처음으로 각 컴포넌트의 render() 함수를 콜해 자신의 DOM 트리를 구성하는 과정을 마운팅이라고 한다.
마운팅 과정에서 생성자자와 render() 함수를 부르는데 마운팅을 마친 후 바로 부르는 함수가 componentDidMount라는 함수다.
컴포넌트가 렌더링 되자마자 API 콜을 하고  그 결과를 리스트로 보여주려고 componentDidMount 함수에 백엔드 API 콜을 구현해야한다.

- 왜 생성자에서 API 콜을 하지 않을까?
: 마운팅이 다 되지 앟을 상태라는 것은 컴포넌트의 프로퍼티(setState 등)가 아직 준비되지 않은 상태라는 뜻.
필욧한 모든 프로퍼티의 존재 여부를 모르는 상태에서 API 콜을 해 상태를 변경하면 프로그램이 예기치 못한 방향으로 흘러갈 수 있다.
리액트에서도 이런 경우 경고메시지를 남긴다.

1) App 컴포넌트에 componentDidMount 추가
localhost/:1 Access to fetch at 'http://localhost:8053/todo' from origin 'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.
If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.

: 보안을 위한 CORS 헤더 Policy를 위반했기 때문에 에러가 나온다.

